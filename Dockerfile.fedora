ARG OS_VERSION=latest

FROM fedora:${OS_VERSION}

ARG DESKTOP_INSTALL=0
ENV container=docker

RUN dnf -y update; \
    dnf -y install \
        python3-dnf \
        python3-libdnf5 \
        python3-pip \
        sudo \
        systemd \
        util-linux \
        which \
    && ([ "$DESKTOP_INSTALL" = "1" ] && dnf group -y install '@Basic Desktop' || true) \
    && dnf clean all \
    && (cd /lib/systemd/system/sysinit.target.wants/; for i in *; do [ $i == systemd-tmpfiles-setup.service ] || rm -f $i; done); \
    rm -rf /lib/systemd/system/multi-user.target.wants/*;\
    rm -rf /etc/systemd/system/*.wants/*;\
    rm -rf /lib/systemd/system/local-fs.target.wants/*; \
    rm -rf /lib/systemd/system/sockets.target.wants/*udev*; \
    rm -rf /lib/systemd/system/sockets.target.wants/*initctl*; \
    rm -rf /lib/systemd/system/basic.target.wants/*;\
    rm -rf /lib/systemd/system/anaconda.target.wants/*; \
    ([ "$DESKTOP_INSTALL" = "1" ] && systemctl stop lightdm.service || true); \
    ([ "$DESKTOP_INSTALL" = "1" ] && systemctl disable lightdm.service || true); \
    ([ "$DESKTOP_INSTALL" = "1" ] && systemctl stop NetworkManager.service || true); \
    ([ "$DESKTOP_INSTALL" = "1" ] && systemctl disable NetworkManager.service || true);

# Install ansible
RUN pip install ansible

# Disable requiretty.
RUN sed -i -e 's/^\(Defaults\s*requiretty\)/#--- \1/'  /etc/sudoers

# Install Ansible inventory file.
RUN mkdir -p /etc/ansible
RUN echo -e '[local]\nlocalhost ansible_connection=local' > /etc/ansible/hosts

VOLUME ["/sys/fs/cgroup", "/tmp", "/run"]
CMD ["/usr/sbin/init"]
